{
  "openapi": "3.0.0",
  "info": {
    "title": "online-store-api",
    "version": "0.0.1",
    "description": "Online Store API",
    "contact": {
      "name": "Alviss Raghnall",
      "email": "isiomastewart@gmail.com"
    }
  },
  "paths": {
    "/carts/add-item": {
      "put": {
        "x-controller-name": "CartController",
        "x-operation-name": "addItem",
        "tags": [
          "CartController"
        ],
        "responses": {
          "200": {
            "description": "User shopping cart item added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemWithRelations"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCartItem"
              }
            }
          }
        },
        "operationId": "CartController.addItem"
      }
    },
    "/carts/count": {
      "get": {
        "x-controller-name": "CartController",
        "x-operation-name": "count",
        "tags": [
          "CartController"
        ],
        "responses": {
          "200": {
            "description": "Cart model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Cart.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Cart>"
                }
              }
            }
          }
        ],
        "operationId": "CartController.count"
      }
    },
    "/carts/remove-item/{itemId}": {
      "delete": {
        "x-controller-name": "CartController",
        "x-operation-name": "removeItem",
        "tags": [
          "CartController"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User shopping cart item removed."
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "CartController.removeItem"
      }
    },
    "/carts/user": {
      "get": {
        "x-controller-name": "CartController",
        "x-operation-name": "findByUserId",
        "tags": [
          "CartController"
        ],
        "responses": {
          "200": {
            "description": "Cart model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.Filter"
                }
              }
            }
          }
        ],
        "operationId": "CartController.findByUserId"
      }
    },
    "/carts/{id}": {
      "put": {
        "x-controller-name": "CartController",
        "x-operation-name": "replaceById",
        "tags": [
          "CartController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Cart PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CartController.replaceById"
      },
      "patch": {
        "x-controller-name": "CartController",
        "x-operation-name": "updateById",
        "tags": [
          "CartController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Cart PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CartController.updateById"
      },
      "get": {
        "x-controller-name": "CartController",
        "x-operation-name": "findById",
        "tags": [
          "CartController"
        ],
        "responses": {
          "200": {
            "description": "Cart model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.Filter"
                }
              }
            }
          }
        ],
        "operationId": "CartController.findById"
      },
      "delete": {
        "x-controller-name": "CartController",
        "x-operation-name": "deleteById",
        "tags": [
          "CartController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Cart DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "CartController.deleteById"
      }
    },
    "/carts": {
      "post": {
        "x-controller-name": "CartController",
        "x-operation-name": "create",
        "tags": [
          "CartController"
        ],
        "responses": {
          "200": {
            "description": "Cart model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCart"
              }
            }
          }
        },
        "operationId": "CartController.create"
      },
      "get": {
        "x-controller-name": "CartController",
        "x-operation-name": "find",
        "tags": [
          "CartController"
        ],
        "responses": {
          "200": {
            "description": "Array of Cart model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "CartController.find"
      }
    },
    "/favourites/{productId}": {
      "delete": {
        "x-controller-name": "FavouritesController",
        "x-operation-name": "deleteById",
        "tags": [
          "FavouritesController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User Favourite item DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FavouritesController.deleteById"
      }
    },
    "/favourites": {
      "post": {
        "x-controller-name": "FavouritesController",
        "x-operation-name": "add",
        "tags": [
          "FavouritesController"
        ],
        "responses": {
          "200": {
            "description": "User model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithRelations"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productId"
                ],
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The id of product to be added.",
          "required": true
        },
        "operationId": "FavouritesController.add"
      },
      "get": {
        "x-controller-name": "FavouritesController",
        "x-operation-name": "find",
        "tags": [
          "FavouritesController"
        ],
        "responses": {
          "200": {
            "description": "Array of User favourites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FavouritesController.find"
      }
    },
    "/orders/count": {
      "get": {
        "x-controller-name": "OrderController",
        "x-operation-name": "count",
        "tags": [
          "OrderController"
        ],
        "responses": {
          "200": {
            "description": "Order model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Order.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Order>"
                }
              }
            }
          }
        ],
        "operationId": "OrderController.count"
      }
    },
    "/orders/user": {
      "get": {
        "x-controller-name": "OrderController",
        "x-operation-name": "findByUser",
        "tags": [
          "OrderController"
        ],
        "responses": {
          "200": {
            "description": "Order model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Filter"
                }
              }
            }
          }
        ],
        "operationId": "OrderController.findByUser"
      }
    },
    "/orders/{id}": {
      "patch": {
        "x-controller-name": "OrderController",
        "x-operation-name": "updateById",
        "tags": [
          "OrderController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "OrderController.updateById"
      },
      "get": {
        "x-controller-name": "OrderController",
        "x-operation-name": "findById",
        "tags": [
          "OrderController"
        ],
        "responses": {
          "200": {
            "description": "Order model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Filter"
                }
              }
            }
          }
        ],
        "operationId": "OrderController.findById"
      },
      "delete": {
        "x-controller-name": "OrderController",
        "x-operation-name": "deleteById",
        "tags": [
          "OrderController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "OrderController.deleteById"
      }
    },
    "/orders": {
      "post": {
        "x-controller-name": "OrderController",
        "x-operation-name": "create",
        "tags": [
          "OrderController"
        ],
        "responses": {
          "200": {
            "description": "Order model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrder"
              }
            }
          }
        },
        "operationId": "OrderController.create"
      },
      "get": {
        "x-controller-name": "OrderController",
        "x-operation-name": "find",
        "tags": [
          "OrderController"
        ],
        "responses": {
          "200": {
            "description": "Array of Order model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "OrderController.find"
      }
    },
    "/payment/verify/{reference}": {
      "get": {
        "x-controller-name": "PaymentController",
        "x-operation-name": "verify",
        "tags": [
          "PaymentController"
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderExcluding_access_code_"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "PaymentController.verify"
      }
    },
    "/payment": {
      "post": {
        "x-controller-name": "PaymentController",
        "x-operation-name": "pay",
        "tags": [
          "PaymentController"
        ],
        "responses": {
          "200": {
            "description": "Payment initialization response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paystackTxnInitResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/req body for payment method"
              }
            }
          }
        },
        "operationId": "PaymentController.pay"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/products/count": {
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "count",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Product.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Product>"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.count"
      }
    },
    "/products/{id}": {
      "put": {
        "x-controller-name": "ProductController",
        "x-operation-name": "replaceById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductController.replaceById"
      },
      "patch": {
        "x-controller-name": "ProductController",
        "x-operation-name": "updateById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductController.updateById"
      },
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "findById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.findById"
      },
      "delete": {
        "x-controller-name": "ProductController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductController.deleteById"
      }
    },
    "/products": {
      "post": {
        "x-controller-name": "ProductController",
        "x-operation-name": "create",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "operationId": "ProductController.create"
      },
      "patch": {
        "x-controller-name": "ProductController",
        "x-operation-name": "updateAll",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Product.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Product>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPartial"
              }
            }
          }
        },
        "operationId": "ProductController.updateAll"
      },
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "find",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Array of Product model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.find"
      }
    },
    "/reviews/count": {
      "get": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "count",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "200": {
            "description": "Review model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Review.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Review>"
                }
              }
            }
          }
        ],
        "operationId": "ReviewController.count"
      }
    },
    "/reviews/user": {
      "get": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "getReviewsByUser",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "200": {
            "description": "Review model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "operationId": "ReviewController.getReviewsByUser"
      }
    },
    "/reviews/{id}": {
      "put": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "replaceById",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Review PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ReviewController.replaceById"
      },
      "patch": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "updateById",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Review PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ReviewController.updateById"
      },
      "get": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "findById",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "200": {
            "description": "Review model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ReviewController.findById"
      },
      "delete": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "deleteById",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Review DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ReviewController.deleteById"
      }
    },
    "/reviews": {
      "post": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "create",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "200": {
            "description": "Review model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewExcluding_id-userId_"
              }
            }
          },
          "description": "The input of reviewCreate function",
          "required": true,
          "additionalProperties": false
        },
        "operationId": "ReviewController.create"
      },
      "patch": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "updateAll",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "200": {
            "description": "Review PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Review.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Review>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPartial"
              }
            }
          }
        },
        "operationId": "ReviewController.updateAll"
      },
      "get": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "find",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "200": {
            "description": "Array of Review model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ReviewController.find"
      },
      "delete": {
        "x-controller-name": "ReviewController",
        "x-operation-name": "delete",
        "tags": [
          "ReviewController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Reviews DELETE success"
                }
              }
            }
          }
        },
        "operationId": "ReviewController.delete"
      }
    },
    "/signin": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "signIn",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  }
                }
              }
            }
          },
          "description": "The input of login function",
          "required": true
        },
        "operationId": "AuthController.signIn"
      }
    },
    "/signup": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "create",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "User model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          },
          "required": true
        },
        "operationId": "AuthController.create"
      }
    },
    "/users": {
      "put": {
        "x-controller-name": "UserController",
        "x-operation-name": "replaceById",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "User PUT success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserExcluding_password-confirmPassword_"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserExcluding_password-confirmPassword_"
              }
            }
          }
        },
        "operationId": "UserController.replaceById"
      }
    },
    "/whoami": {
      "get": {
        "x-controller-name": "AuthController",
        "x-operation-name": "whoAmI",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserExcluding_password-confirmPassword_"
                }
              }
            }
          }
        },
        "operationId": "AuthController.whoAmI"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "UserExcluding_password-confirmPassword_": {
        "title": "UserExcluding_password-confirmPassword_",
        "type": "object",
        "description": "(tsType: Omit<User, 'password' | 'confirmPassword'>, schemaOptions: { exclude: [ 'password', 'confirmPassword' ], includeRelations: false })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 5
          },
          "firstName": {
            "type": "string",
            "minLength": 3
          },
          "lastName": {
            "type": "string",
            "minLength": 3
          },
          "address": {
            "type": "string",
            "minLength": 10
          },
          "phone": {
            "type": "string",
            "minLength": 5
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "address",
          "phone"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<User, 'password' | 'confirmPassword'>"
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 5
          },
          "firstName": {
            "type": "string",
            "minLength": 3
          },
          "lastName": {
            "type": "string",
            "minLength": 3
          },
          "address": {
            "type": "string",
            "minLength": 10
          },
          "phone": {
            "type": "string",
            "minLength": 5
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string",
            "const": {
              "$data": "1/password"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "address",
          "phone",
          "confirmPassword"
        ],
        "additionalProperties": false
      },
      "Review": {
        "title": "Review",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "rating",
          "title",
          "description",
          "productId"
        ],
        "additionalProperties": false
      },
      "ReviewExcluding_id-userId_": {
        "title": "ReviewExcluding_id-userId_",
        "type": "object",
        "description": "(tsType: Omit<Review, 'id' | 'userId'>, schemaOptions: { exclude: [ 'id', 'userId' ] })",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "rating",
          "title",
          "description",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Review, 'id' | 'userId'>"
      },
      "Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500
          },
          "category": {
            "type": "string",
            "minLength": 3
          },
          "price": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          },
          "image": {
            "type": "string",
            "minLength": 5
          }
        },
        "required": [
          "name",
          "description",
          "category",
          "price",
          "image"
        ],
        "additionalProperties": false
      },
      "CartItem": {
        "title": "CartItem",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "quantity"
        ],
        "additionalProperties": false
      },
      "UserCredentialsWithRelations": {
        "title": "UserCredentialsWithRelations",
        "type": "object",
        "description": "(tsType: UserCredentialsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "userId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserCredentialsWithRelations"
      },
      "DiscountWithRelations": {
        "title": "DiscountWithRelations",
        "type": "object",
        "description": "(tsType: DiscountWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "percentage": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "percentage",
          "active"
        ],
        "additionalProperties": false,
        "x-typescript-type": "DiscountWithRelations"
      },
      "ProductInventoryWithRelations": {
        "title": "ProductInventoryWithRelations",
        "type": "object",
        "description": "(tsType: ProductInventoryWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "quantity"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductInventoryWithRelations"
      },
      "ProductWithRelations": {
        "title": "ProductWithRelations",
        "type": "object",
        "description": "(tsType: ProductWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500
          },
          "category": {
            "type": "string",
            "minLength": 3
          },
          "price": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          },
          "image": {
            "type": "string",
            "minLength": 5
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountWithRelations"
          },
          "inventory": {
            "$ref": "#/components/schemas/ProductInventoryWithRelations"
          }
        },
        "required": [
          "name",
          "description",
          "category",
          "price",
          "image"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductWithRelations"
      },
      "OrderWithRelations": {
        "title": "OrderWithRelations",
        "type": "object",
        "description": "(tsType: OrderWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "reference": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "access_code": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          }
        },
        "required": [
          "products"
        ],
        "additionalProperties": false,
        "x-typescript-type": "OrderWithRelations"
      },
      "UserLoginAttemptsWithRelations": {
        "title": "UserLoginAttemptsWithRelations",
        "type": "object",
        "description": "(tsType: UserLoginAttemptsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "attempts": {
            "type": "number"
          },
          "lastAttemptAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          }
        },
        "required": [
          "attempts",
          "lastAttemptAt"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserLoginAttemptsWithRelations"
      },
      "UserWithRelations": {
        "title": "UserWithRelations",
        "type": "object",
        "description": "(tsType: UserWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 5
          },
          "firstName": {
            "type": "string",
            "minLength": 3
          },
          "lastName": {
            "type": "string",
            "minLength": 3
          },
          "address": {
            "type": "string",
            "minLength": 10
          },
          "phone": {
            "type": "string",
            "minLength": 5
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string",
            "const": {
              "$data": "1/password"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userCredentials": {
            "$ref": "#/components/schemas/UserCredentialsWithRelations"
          },
          "favourites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWithRelations"
            }
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderWithRelations"
            }
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewWithRelations"
            }
          },
          "loginAttempts": {
            "$ref": "#/components/schemas/UserLoginAttemptsWithRelations"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "address",
          "phone",
          "confirmPassword"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserWithRelations"
      },
      "ReviewWithRelations": {
        "title": "ReviewWithRelations",
        "type": "object",
        "description": "(tsType: ReviewWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          },
          "product": {
            "$ref": "#/components/schemas/ProductWithRelations"
          }
        },
        "required": [
          "rating",
          "title",
          "description",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ReviewWithRelations"
      },
      "ReviewPartial": {
        "title": "ReviewPartial",
        "type": "object",
        "description": "(tsType: Partial<Review>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Review>"
      },
      "NewProduct": {
        "title": "NewProduct",
        "type": "object",
        "description": "(tsType: Omit<Product, 'id'>, schemaOptions: { title: 'NewProduct', exclude: [ 'id' ] })",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500
          },
          "category": {
            "type": "string",
            "minLength": 3
          },
          "price": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          },
          "image": {
            "type": "string",
            "minLength": 5
          }
        },
        "required": [
          "name",
          "description",
          "category",
          "price",
          "image"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Product, 'id'>"
      },
      "ProductPartial": {
        "title": "ProductPartial",
        "type": "object",
        "description": "(tsType: Partial<Product>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500
          },
          "category": {
            "type": "string",
            "minLength": 3
          },
          "price": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          },
          "image": {
            "type": "string",
            "minLength": 5
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Product>"
      },
      "OrderExcluding_access_code_": {
        "title": "OrderExcluding_access_code_",
        "type": "object",
        "description": "(tsType: Omit<Order, 'access_code'>, schemaOptions: { exclude: [ 'access_code' ] })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "reference": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "required": [
          "products"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Order, 'access_code'>"
      },
      "Order": {
        "title": "Order",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "reference": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "access_code": {
            "type": "string"
          }
        },
        "required": [
          "products"
        ],
        "additionalProperties": false
      },
      "NewOrder": {
        "title": "NewOrder",
        "type": "object",
        "description": "(tsType: Omit<Order, 'id' | 'status' | 'userId' | 'date' | 'reference' | 'access_code'>, schemaOptions: { title: 'NewOrder', exclude: [ 'id', 'status', 'userId', 'date', 'reference', 'access_code' ] })",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "address": {
            "type": "string"
          }
        },
        "required": [
          "products"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Order, 'id' | 'status' | 'userId' | 'date' | 'reference' | 'access_code'>"
      },
      "OrderPartial": {
        "title": "OrderPartial",
        "type": "object",
        "description": "(tsType: Partial<Order>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "reference": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "access_code": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Order>"
      },
      "Cart": {
        "title": "Cart",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        },
        "additionalProperties": false
      },
      "NewCart": {
        "title": "NewCart",
        "type": "object",
        "description": "(tsType: Omit<Cart, 'id' | 'userId' | 'createdAt' | 'updatedAt'>, schemaOptions: { title: 'NewCart', exclude: [ 'id', 'userId', 'createdAt', 'updatedAt' ] })",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<Cart, 'id' | 'userId' | 'createdAt' | 'updatedAt'>"
      },
      "CartWithRelations": {
        "title": "CartWithRelations",
        "type": "object",
        "description": "(tsType: CartWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "CartWithRelations"
      },
      "CartPartial": {
        "title": "CartPartial",
        "type": "object",
        "description": "(tsType: Partial<Cart>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Cart>"
      },
      "CartItemWithRelations": {
        "title": "CartItemWithRelations",
        "type": "object",
        "description": "(tsType: CartItemWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "quantity"
        ],
        "additionalProperties": false,
        "x-typescript-type": "CartItemWithRelations"
      },
      "NewCartItem": {
        "title": "NewCartItem",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<CartItem, 'product'>, 'quantity'>, schemaOptions: { title: 'NewCartItem', optional: [ 'quantity' ], exclude: [ 'product' ] })",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<CartItem, 'product'>, 'quantity'>"
      },
      "NewUser": {
        "title": "NewUser",
        "type": "object",
        "description": "(tsType: Omit<User, 'id' | 'roles' | 'createdAt' | 'updatedAt'>, schemaOptions: { title: 'NewUser', exclude: [ 'id', 'roles', 'createdAt', 'updatedAt' ] })",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 5
          },
          "firstName": {
            "type": "string",
            "minLength": 3
          },
          "lastName": {
            "type": "string",
            "minLength": 3
          },
          "address": {
            "type": "string",
            "minLength": 10
          },
          "phone": {
            "type": "string",
            "minLength": 5
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string",
            "const": {
              "$data": "1/password"
            }
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "address",
          "phone",
          "confirmPassword"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<User, 'id' | 'roles' | 'createdAt' | 'updatedAt'>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "Cart.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Cart.ScopeFilter"
      },
      "Cart.IncludeFilter.Items": {
        "title": "Cart.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Cart.ScopeFilter"
          }
        }
      },
      "Cart.Filter": {
        "type": "object",
        "title": "Cart.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "items": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "userId",
                    "items"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Cart.Fields"
          },
          "include": {
            "title": "Cart.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Cart.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Cart>"
      },
      "Cart.Filter1": {
        "type": "object",
        "title": "Cart.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Cart.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "items": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "userId",
                    "items"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Cart.Fields"
          },
          "include": {
            "title": "Cart.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Cart.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Cart>"
      },
      "User.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "User.ScopeFilter"
      },
      "User.IncludeFilter.Items": {
        "title": "User.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "userCredentials",
              "favourites",
              "orders",
              "reviews",
              "loginAttempts"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/User.ScopeFilter"
          }
        }
      },
      "User.Filter": {
        "type": "object",
        "title": "User.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "User.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "boolean"
                  },
                  "password": {
                    "type": "boolean"
                  },
                  "confirmPassword": {
                    "type": "boolean"
                  },
                  "roles": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "email",
                    "firstName",
                    "lastName",
                    "address",
                    "phone",
                    "password",
                    "confirmPassword",
                    "roles"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "User.Fields"
          },
          "include": {
            "title": "User.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/User.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<User>"
      },
      "Order.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Order.ScopeFilter"
      },
      "Order.IncludeFilter.Items": {
        "title": "Order.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Order.ScopeFilter"
          }
        }
      },
      "Order.Filter": {
        "type": "object",
        "title": "Order.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "products": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "reference": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "access_code": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "userId",
                    "products",
                    "status",
                    "date",
                    "reference",
                    "address",
                    "access_code"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Order.Fields"
          },
          "include": {
            "title": "Order.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Order.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Order>"
      },
      "Order.Filter1": {
        "type": "object",
        "title": "Order.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Order.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "products": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "reference": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "access_code": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "userId",
                    "products",
                    "status",
                    "date",
                    "reference",
                    "address",
                    "access_code"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Order.Fields"
          },
          "include": {
            "title": "Order.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Order.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Order>"
      },
      "paystackTxnInitResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "paystackTxnInitResponse",
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "authorization_url": {
                "type": "string"
              },
              "access_code": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              }
            },
            "required": [
              "authorization_url",
              "access_code"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "req body for payment method": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "req body for payment method",
        "type": "object",
        "properties": {
          "amount": {
            "title": "total amount",
            "type": "number"
          },
          "passedEmail": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        },
        "required": [
          "amount",
          "items"
        ],
        "additionalProperties": false
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Product.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Product.ScopeFilter"
      },
      "Product.IncludeFilter.Items": {
        "title": "Product.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "discount",
              "inventory"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Product.ScopeFilter"
          }
        }
      },
      "Product.Filter": {
        "type": "object",
        "title": "Product.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "price": {
                    "type": "boolean"
                  },
                  "rating": {
                    "type": "boolean"
                  },
                  "image": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "name",
                    "description",
                    "category",
                    "price",
                    "rating",
                    "image"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Product.Fields"
          },
          "include": {
            "title": "Product.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Product.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Product>"
      },
      "Product.Filter1": {
        "type": "object",
        "title": "Product.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Product.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "price": {
                    "type": "boolean"
                  },
                  "rating": {
                    "type": "boolean"
                  },
                  "image": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "name",
                    "description",
                    "category",
                    "price",
                    "rating",
                    "image"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Product.Fields"
          },
          "include": {
            "title": "Product.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Product.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Product>"
      },
      "Review.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Review.ScopeFilter"
      },
      "Review.IncludeFilter.Items": {
        "title": "Review.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "user",
              "product"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Review.ScopeFilter"
          }
        }
      },
      "Review.Filter": {
        "type": "object",
        "title": "Review.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "rating": {
                    "type": "boolean"
                  },
                  "title": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "rating",
                    "title",
                    "description",
                    "userId",
                    "productId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Review.Fields"
          },
          "include": {
            "title": "Review.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Review.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Review>"
      },
      "Review.Filter1": {
        "type": "object",
        "title": "Review.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Review.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "boolean"
                  },
                  "rating": {
                    "type": "boolean"
                  },
                  "title": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "rating",
                    "title",
                    "description",
                    "userId",
                    "productId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Review.Fields"
          },
          "include": {
            "title": "Review.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Review.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Review>"
      }
    },
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "jwt": []
    }
  ]
}
